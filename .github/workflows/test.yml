name: Test

on:
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:

    - name: Succeed
      id: test_succeed 
      run: exit 0

    - name: Build Badge
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 6935a607aff6233d996070495bba70b7
          filename: ${{ matrix.os}}-test-succeed.json
          label: Test
          message: ${{ steps.test_succeed.outcome == 'success' && 'success' || 'failed'}}
          color: green

    - name: Fail
      id: test_fail
      run: exit 1
      continue-on-error: true

    - name: Build Badge
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 6935a607aff6233d996070495bba70b7
          filename: ${{ matrix.os}}-test-failed.json
          label: Test
          message: ${{ steps.test_fail.outcome == 'success' && 'success' || 'failed'}}
          color: red

    - name: Some output
      id: create_output
      uses: mathiasvr/command-output@v1
      with: 
        run: |
          echo "some normal text"
          echo "some normal text 1"
          echo "some normal text 2"
          echo "some normal text 3"
          echo "some error text" >&2
          echo "some error text 1" >&2
      
    - name: Read output
      run: |
        output = ""
        output += "${{ steps.create_output.outputs.stdout }}"
        output += "${{ steps.create_output.outputs.stderr }}"
        print("output", output)
      shell: python
